type Attendance{
    id: ID!
    teacher: User!
    lecture: Lecture!
    student_token: String!
    created_at: DateTime!
}

type AttendancePercentage{
    student_id: ID!
    percentage: Float!
    lecture_id: ID!
    lecs_attended: Int!
    num: Int!
    subject_name: String!
}

input AttendanceInput{
    teacher_id: ID!
    lecture_id: ID!
    student_token: String!
}

extend type Mutation {
 bulkInsertAttendance(input: AttendanceInput!): GenericMessage @field(resolver: "App\\GraphQL\\Resolvers\\Mutations\\AttendanceMutationResolver@bulkInsert")
}

extend type Query {
    attendanceByStudentId(fromDate: String!, toDate: String!, studentId: ID!): [AttendancePercentage] @field(resolver: "App\\GraphQL\\Resolvers\\Mutations\\AttendanceQueryResolver@getAttendanceByStudentId")
    attendanceByLecture(fromDate: String!, toDate: String!, lectureId: ID!): [AttendancePercentage] @field(resolver: "App\\GraphQL\\Resolvers\\Mutations\\AttendanceQueryResolver@getAttendanceByLectureId")
    attendanceByStudentAndLecture(fromDate: String!, toDate: String!, studentId: ID!, lectureId: ID!): [AttendancePercentage] @field(resolver: "App\\GraphQL\\Resolvers\\Mutations\\AttendanceQueryResolver@getAttendanceByStudentAndLecture")

}
